#include <iostream>
#include <bitset>

int zd_4() {
    // исходное значение переменной x
    int16_t x = 155;

    // знаковый сдвиг влево на 1 бит
    std::cout << "Signed left shift by 1 bit: " << (x << 1) << std::endl;

    // беззнаковый сдвиг влево на 1 бит
    std::cout << "Unsigned left shift by 1 bit: " << ((uint16_t)x << 1) << std::endl;

    // знаковый сдвиг вправо на 1 бит
    std::cout << "Signed right shift by 1 bit: " << (x >> 1) << std::endl;

    // беззнаковый сдвиг вправо на 1 бит
    std::cout << "Unsigned right shift by 1 bit: " << ((uint16_t)x >> 1) << std::endl;

    // рассчитывает x & 15
    std::cout << "x & 15 = " << (x & 15) << std::endl;

    // рассчитывает x & -16
    std::cout << "x & -16 = " << (x & -16) << std::endl;

    return 0;
}
//Сдвиг – это операция, которая изменяет значение числа путем перемещения его битов влево или вправо на определенное количество позиций.
//
//В языке C/C++ операции сдвига представлены операторами << (сдвиг влево) и >> (сдвиг вправо). Оба оператора принимают два операнда: левый операнд – это число, которое нужно сдвинуть, а правый операнд – это количество позиций, на которые нужно сдвинуть число.
//
//При сдвиге влево биты числа смещаются влево, при этом младшие биты заменяются на нули, а старшие биты могут быть потеряны, если число выходит за границы диапазона. Например, сдвиг числа 5 (101 в двоичной системе) влево на 2 позиции даст число 20 (10100 в двоичной системе).
//
//При сдвиге вправо биты числа смещаются вправо, при этом старшие биты заменяются на нули или на знаковый бит в зависимости от типа сдвига. Например, сдвиг числа -8 (11111000 в двоичной системе) вправо на 2 позиции даст число -2 (11111110 в двоичной системе) в случае знакового сдвига, а число 62 (00111110 в двоичной системе) в случае беззнакового сдвига.
//
//Сдвиги часто используются в программировании для ускорения операций умножения и деления на степень двойки, для получения/изменения битовых флагов и т.д.
