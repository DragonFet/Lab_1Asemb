#include <stdio.h>
int zd_3() {
    short int m = 155;
    short int n = -299;

    // знаковое умножение на 2
    m = m * 2;
    n = n * 2;
    printf("Знаковое умножение на 2: m = %d, n = %d\n", m, n);

    // беззнаковое умножение на 2
    m = (unsigned short int)m * 2;
    n = (unsigned short int)n * 2;
    printf("Беззнаковое умножение на 2: m = %u, n = %u\n", m, n);

    // знаковое деление на 2
    m = m / 2;
    n = n / 2;
    printf("Знаковое деление на 2: m = %d, n = %d\n", m, n);

    // беззнаковое деление на 2
    m = (unsigned short int)m / 2;
    n = (unsigned short int)n / 2;
    printf("Беззнаковое деление на 2: m = %u, n = %u\n", m, n);

    // расчёт остатка от беззнакового деления на 16
    unsigned short int remainder_m = m % 16;
    unsigned short int remainder_n = n % 16;
    printf("Остаток от беззнакового деления на 16: remainder_m = %u, remainder_n = %u\n", remainder_m, remainder_n);

    // округление вниз до числа, кратного 16 (беззнаковое)
    m = m & ~(0xF);
    n = n & ~(0xF);
    printf("Округление вниз до числа, кратного 16: m = %u, n = %u\n", m, n);

    return 0;
}
/*
 * Знаковое умножение на 2:
Знаковое умножение на 2 удваивает значение переменной, сохраняя ее знак. Если знак переменной отрицательный, то знаковое умножение на 2 изменяет знак на противоположный, увеличивая по модулю значение переменной.

Беззнаковое умножение на 2:
Беззнаковое умножение на 2 удваивает значение переменной, не учитывая ее знак. Результатом беззнакового умножения на 2 всегда является положительное число, даже если исходное значение было отрицательным.

Знаковое деление на 2:
Знаковое деление на 2 уменьшает значение переменной на половину, сохраняя ее знак. Если знак переменной отрицательный, то знаковое деление на 2 изменяет знак на противоположный, уменьшая по модулю значение переменной.

Беззнаковое деление на 2:
Беззнаковое деление на 2 уменьшает значение переменной на половину, не учитывая ее знак. Результатом беззнакового деления на 2 всегда является положительное число, даже если исходное значение было отрицательным.

Расчёт остатка от беззнакового деления на 16:
Расчет остатка от беззнакового деления на 16 можно выполнить с помощью операции модуля (%). Однако при делении беззнаковой переменной на 16 операция модуля может вернуть значения от 0 до 15. Поэтому, чтобы получить остаток от деления, который находится в диапазоне от 0 до 15, можно использовать операцию "И" (&) с числом 15 (0xF).

Округление вниз до числа, кратного 16 (беззнаковое):
Округление вниз до числа, кратного 16, можно выполнить с помощью операции "И" (&) с числом, состоящим из 1 в младших разрядах и 0 в старших разрядах (например, 0xFFFFFFF0 для 32-битной переменной). Результатом операции "И" будет число, которое меньше или равно исходному числу и кратно 16.
 */